version: '3.7'

services:
    nginx:
        image: nginx:1.17-alpine
        volumes:
            - ./../public:/app/public:ro
        depends_on:
            - php
        ports:
            - "${APP_NGINX_PORT}:80"
        networks:
            - net

    php:
        container_name: ${COMPOSE_PROJECT_NAME}_php
        user: "${UID}:${GID}"
        build:
            dockerfile: artifact/Dockerfile
            context: .
            target: app_php
        environment:
            - PHP_DATE_TIMEZONE=${PHP_DATE_TIMEZONE:-UTC}
        volumes:
            - ./../:/app:rw,cached
            - ./../public:/app/public:rw,delegated
            - ./../var/cache:/app/var/cache:cached
            - ./../var/log:/app/var/log:cached
        depends_on:
            - database
        networks:
            - net

    database:
        image: postgres:14.2
        container_name: ${COMPOSE_PROJECT_NAME}_database
        restart: always
        environment:
            POSTGRES_USER: ${APP_POSTGRES_USER}
            POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
            POSTGRES_DB: ${APP_POSTGRES_DB}
        networks:
            - net
        volumes:
            - app_postgres:/var/lib/postgresql/data

    nodejs:
        build:
            dockerfile: artifact/nodejs/Dockerfile
            context: .
            target: nodejs
            cache_from:
                - quay.io/php:latest
                - quay.io/nodejs:latest
                - quay.io/nginx:latest
        volumes:
          - ./../:/app:rw,cached
          - ./../public:/app/public:rw,delegated
        networks:
            - net

    redis:
        container_name: ${COMPOSE_PROJECT_NAME}_redis
        image: redis:alpine
        networks:
          - net
networks:
    net:
        name: ${DOCKER_NETWORK_NAME}
        ipam:
            driver: default
            config:
                - subnet: "${DOCKER_SUBNET}"

volumes:
    app_postgres:
        name: ${COMPOSE_PROJECT_NAME}_postgres
